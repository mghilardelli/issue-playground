name: Approval Tracking

on:
  issues:
    types: [edited]

permissions:
  issues: write
jobs:
  check_checkbox:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2 

      - name: Check if checkbox was edited
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Issue Body: ${{ github.event.issue.body }}"
          echo "User: ${{ github.event.issue.user.login }}"
          
          # Extract previous issue body from the webhook event
          PREVIOUS_BODY="${{ github.event.changes.body.from }}"
          echo "Previous Body: $PREVIOUS_BODY"
          
          # Extract currently checked checkboxes
          CURRENT_CHECKED=$(echo "${{ github.event.issue.body }}" | grep -E '\- \[x\]')
          echo "Current: $CURRENT_CHECKED"
          
          USERNAME="${{ github.event.issue.user.login }}"
          NEW_BODY=""
          
          # Build the new body line by line
          while IFS= read -r line; do
              printf -v trimmed_line "%s" "$line"
              # Check if the line is a checkbox
              if [[ "$trimmed_line" =~ \[x\] ]]; then
                  item_name="${trimmed_line#- }"  # Remove the leading "- "
                  
                  # Check if this item was previously unchecked
                  if ! grep -q "\- \[x\] $item_name" <<< "$PREVIOUS_BODY"; then
                      # Item was newly checked
                      NEW_BODY+="$trimmed_line (@$USERNAME)"
                      echo "Item added $trimmed_line (@$USERNAME)"
                  else
                      # Item was already checked
                      NEW_BODY+="$trimmed_line"
                      echo "Item was already checked $trimmed_line"
                  fi
              else
                  # Non-checkbox line, add as is
                  NEW_BODY+="$trimmed_line"
                  echo "Item non-checkbox $trimmed_line"
              fi
              NEW_BODY+=$'\n'
          done <<< "$(echo "${{ github.event.issue.body }}")"

          # If there are changes, update the issue body
          if [[ "$NEW_BODY" != "${{ github.event.issue.body }}" ]]; then
              echo "Updating the issue body..."
              echo "Body: $NEW_BODY"
              gh issue edit ${{ github.event.issue.number }} --body "$NEW_BODY"
          fi
